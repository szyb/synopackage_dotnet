using System;
using System.Collections.Generic;
using System.Text;
using synopackage_dotnet.Model.DTOs;

namespace synopackage_dotnet.Model
{
    public static class VersionHelper
    {
      private static Dictionary<string, VersionDTO> AllVersions { get; set; }
      private static Dictionary<string, VersionDTO> AllVersionsByShortVersion { get; set; }
      private static Dictionary<int, VersionDTO> AllVersionsByBuild { get; set; } 

      static VersionHelper()
      {
        AllVersions = new Dictionary<string, VersionDTO>(); 
        AllVersionsByShortVersion = new Dictionary<string, VersionDTO>();
        AllVersionsByBuild = new Dictionary<int, VersionDTO>();

        {{~ for v in versions ~}}
        AddVersion(
        {{--}}"{{- v.version -}}",
        {{--}}"{{- v.short_version -}}",
        {{- v.major -}},
        {{- v.minor -}},
        {{- v.micro -}},
        {{- v.build -}});
        {{~ end ~}}
      }

      private static void AddVersion(
        string version,
        string shortVersion,
        int major,
        int minor,
        int micro,
        int build
      )
      {
        VersionDTO ver = new VersionDTO()
        {
          Version = version,
          ShortVersion = shortVersion,
          Major = major,
          Minor = minor,
          Micro = micro,
          Build = build
        };
        AllVersions.Add(ver.Version, ver);
        AllVersionsByBuild.Add(ver.Build, ver);

        if (!AllVersionsByShortVersion.ContainsKey(ver.ShortVersion))
          AllVersionsByShortVersion.Add(ver.ShortVersion, ver);
        else if (AllVersionsByShortVersion[ver.ShortVersion].Build < ver.Build)
          AllVersionsByShortVersion[ver.ShortVersion] = ver;
      }

      public static IEnumerable<VersionDTO> GetAllVersions() => AllVersionsByShortVersion.Values;

      public static VersionDTO FindVersion(string version)
      {
        if (AllVersions.ContainsKey(version))
        {
          var ver = AllVersions[version];
          if (AllVersionsByShortVersion.ContainsKey(ver.ShortVersion))
            return AllVersionsByShortVersion[ver.ShortVersion];
          else          
            return ver;          
        }
        else
          return null;
      }
      
      public static VersionDTO FindByBuild(int build) => AllVersionsByBuild.ContainsKey(build) ? AllVersionsByBuild[build] : null;
    }
}
